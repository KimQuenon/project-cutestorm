{% extends 'base.html.twig' %}

{% block title %}Create Order{% endblock %}

{% block body %}
<div class="container mt-5">
    <h1>Create Order</h1>
    {{app.user.address}}
    {{app.user.postalcode}}{{app.user.city}}
    {{app.user.country}}
    <a href="{{ path('profile_edit') }}" class="btn btn-warning">Edit</a>

    {{ form_start(form) }}
        {{ form_widget(form) }}
        
        <h2 class="mt-5">Order Summary</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Product</th>
                        <th scope="col">Size</th>
                        <th scope="col" class="text-center">Quantity</th>
                        <th scope="col" class="text-right">Price</th>
                        <th scope="col" class="text-right">Total</th>
                    </tr>
                </thead>
                <tbody>
                    {% for cartItem in cartItems %}
                        <tr>
                            <td>{{ cartItem.productVariant.product.name }}</td>
                            <td>{{ cartItem.productVariant.size }}</td>
                            <td class="text-center">{{ cartItem.quantity }}</td>
                            <td class="text-right">{{ cartItem.productVariant.product.price|number_format(2, ',', '.') }} $</td>
                            <td class="text-right">{{ (cartItem.productVariant.product.price * cartItem.quantity)|number_format(2, ',', '.') }} $</td>
                        </tr>
                    {% endfor %}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-right"><strong>Total:</strong></td>
                        <td class="text-right">
                            <strong id="order-total-price">{{ totalPrice|number_format(2, ',', '.') }} $</strong>
                        </td>
                    </tr>
                    <tr id="delivery-row">
                        <td colspan="4" class="text-right"><strong>Delivery Cost:</strong></td>
                        <td class="text-right">
                            <strong id="delivery-cost">0.00 $</strong>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" class="text-right"><strong>Grand Total:</strong></td>
                        <td class="text-right">
                            <strong id="grand-total">{{ totalPrice|number_format(2, ',', '.') }} $</strong>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <button type="submit" class="btn btn-primary">Pay my order</button>
        <a href="{{ path('cart_show') }}" class="btn btn-warning">
            Edit cart
        </a>
    {{ form_end(form) }}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize the total price
    var totalPrice = parseFloat('{{ totalPrice }}');

    // Find all delivery options
    var deliveryOptions = document.querySelectorAll('input[name="order[delivery]"]');

    // Initialize delivery cost to the first delivery option if available
    var deliveryCost = 0;
    if (deliveryOptions.length > 0) {
        var firstDeliveryOption = deliveryOptions[0];
        firstDeliveryOption.checked = true; // Set the first option as checked
        deliveryCost = parseFloat(firstDeliveryOption.getAttribute('data-price'));
    }

    // Update the delivery cost display
    document.getElementById('delivery-cost').textContent = deliveryCost.toFixed(2) + ' $';

    // Update the grand total display
    var grandTotal = totalPrice + deliveryCost;
    document.getElementById('grand-total').textContent = grandTotal.toFixed(2) + ' $';

    deliveryOptions.forEach(function(option) {
        option.addEventListener('change', function() {
            // Update delivery cost based on selected option
            var selectedDeliveryOption = document.querySelector('input[name="order[delivery]"]:checked');
            if (selectedDeliveryOption) {
                deliveryCost = parseFloat(selectedDeliveryOption.getAttribute('data-price'));
            }
            // Update total and grand total
            grandTotal = totalPrice + deliveryCost;
            document.getElementById('delivery-cost').textContent = deliveryCost.toFixed(2) + ' $';
            document.getElementById('grand-total').textContent = grandTotal.toFixed(2) + ' $';
        });
    });
});
</script>
{% endblock %}
