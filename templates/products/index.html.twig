{% extends 'base.html.twig' %}

{% block header %}
    {% include "partials/_header.html.twig" with { megaMenu: 'bg-primary-dark', textColor: 'text-tertiary-dark', textHover: 'hover:text-tertiary' } %}
{% endblock %}

{% block title %}Product Store{% endblock %}

{% block body %}
	<div class="w-full lg:h-[70%] md:h-1/2 h-[65%] bg-primary-dark relative pt-20">
        <div class="w-1/2 mx-auto text-center">
			<p class="font-bold text-background uppercase md:-mb-8 mb-0">OUR NEW ARRIVAL WILL BE AVAILABLE IN :</p>
                <div class="flex justify-center">
					<div>
            			<div class="font-gliker md:text-[160px] text-[80px] text-background md:-mb-10 mb-0" id="days"></div>
						<p class="font-bold text-primary uppercase">days</p>
					</div>
					<div>
            			<div class="font-gliker md:text-[160px] text-[80px] text-background md:-mb-10 mb-0" id="hour"></div>
						<p class="font-bold text-primary uppercase">hours</p>
					</div>
					<div>
            			<div class="font-gliker md:text-[160px] text-[80px] text-background md:-mb-10 mb-0" id="min"></div>
						<p class="font-bold text-primary uppercase">minutes</p>
					</div>
					<div>
            			<div class="font-gliker md:text-[160px] text-[80px] text-background md:-mb-10 mb-0" id="sec"></div>
						<p class="font-bold text-primary uppercase">seconds</p>
					</div>
                </div>
            </div>
        </div>
		<img src="/images/store-cloud.svg" alt="store-cloud" class="w-full lg:h-[70%] md:h-1/2 h-[65%] object-cover absolute top-0">
	</div>
	<div class="slide bg-background min-h-screen">
		<div class="container mx-auto my-5 min-h-full">
		<div class="flex md:flex-row flex-col min-h-full lg:gap-5 gap-2">
				<!-- Filter Sidebar -->
				<div class="w-full lg:w-1/4 md:w-1/3 px-4 mb-4 min-h-full">
					<div class="rounded-xl shadow h-fit sticky top-4 z-10">
						<div class="bg-tertiary md:rounded-t-xl md:rounded-b-none rounded-xl border-2 border-tertiary-dark px-4 py-2 flex flex-row justify-between items-center radius">
							<h5 class="text-background font-bold text-lg">Filters</h5>
							<i class="fa-solid fa-chevron-down text-background md:hidden block transition duration-300"></i>
						</div>
						<form class="bg-white rounded-b-xl border-t-0 p-4 border-2 border-tertiary-dark md:block hidden display">
							<p class="subtitle mb-4">Filter by colors</p>
							<div class="mb-4">
								<select class="form-select block w-full rounded-xl px-3 py-2 bg-background" id="color" name="color" onchange="this.form.submit()">
									<option value="">All</option>
									{% for color in colors %}
										<option value="{{ color.id }}" {% if selectedColor == color.id %} selected {% endif %}>{{ color.name }}</option>
									{% endfor %}
								</select>
							</div>
							<p class="subtitle mb-4">Filter by category</p>
							<div class="mb-4">
								<select class="form-select block w-full rounded-xl px-3 py-2 bg-background" id="category" name="category" onchange="this.form.submit()">
									<option value="">All</option>
									{% for category in categories %}
										<option value="{{ category.id }}" {% if selectedCategory == category.id %} selected {% endif %}>{{ category.name }}</option>
									{% endfor %}
								</select>
							</div>
							<p class="subtitle mb-4">Sort by</p>
							<div class="mb-4">
								<select class="form-select block w-full rounded-xl px-3 py-2 bg-background" id="sort" name="sort" onchange="this.form.submit()">
									<option value="">Default</option>
									<option value="name_asc" {% if sort == 'name_asc' %} selected {% endif %}>Name A-Z</option>
									<option value="name_desc" {% if sort == 'name_desc' %} selected {% endif %}>Name Z-A</option>
									<option value="date_asc" {% if sort == 'date_asc' %} selected {% endif %}>Date Oldest First</option>
									<option value="date_desc" {% if sort == 'date_desc' %} selected {% endif %}>Date Newest First</option>
								</select>
							</div>
						</form>
					</div>
				</div>

				<!-- Products Grid -->
				<div class="w-full lg:w-3/4 md:w-2/3 px-4">
					<div class="flex justify-between mb-8 lg:flex-row flex-col">
						<h2 class="title title-second text-tertiary-dark">Our store</h2>
						{% include "partials/_search.html.twig" %}
					</div>
					{% if products|length > 0 %}
						<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
							{% for product in products %}
								{% include "partials/_cardProduct.html.twig" %}
							{% endfor %}
						</div>
						{% include "partials/_pagination.html.twig" with {
							'route': 'store',
							'parameters': {
								'color': selectedColor,
								'category': selectedCategory,
								'sort': sort
							},
							'page': currentPage,
							'pages': totalPages
						} %}
					{% else %}
						<p>No products... yet</p>
					{% endif %}
				</div>
			</div>
		</div>
	</div>

{% endblock %}

{% block javascripts %}
	{{encore_entry_script_tags('search')}}
	{{encore_entry_script_tags('toggleDisplay')}}
    <script>
        // update chrono
        function chrono() {
            const divDays = document.querySelector('#days');
            const divHours = document.querySelector('#hour');
            const divMin = document.querySelector('#min');
            const divSec = document.querySelector('#sec');
            // count endDate
            function compte() {
                var actualDatetime = new Date();
                var endDate = new Date("January 10, 2026 00:00:00");
                var totalSecondes = (endDate - actualDatetime) / 1000;
                // if timer ends
                if (totalSecondes < 0) {
                    divCount.innerHTML = "fin";
                    return;
                }
                // values
                var days = Math.floor(totalSecondes / (60 * 60 * 24));
                var hours = Math.floor((totalSecondes - (days * 60 * 60 * 24)) / (60 * 60));
                var minutes = Math.floor((totalSecondes - ((days * 60 * 60 * 24 + hours * 60 * 60))) / 60);
                var secondes = Math.floor(totalSecondes - ((days * 60 * 60 * 24 + hours * 60 * 60 + minutes * 60)));
                // display
				divDays.innerHTML = days.toString().padStart(2, '0') + ":";
				divHours.innerHTML = hours.toString().padStart(2, '0') + ":";
				divMin.innerHTML = minutes.toString().padStart(2, '0') + ":";
				divSec.innerHTML = secondes.toString().padStart(2, '0');
				
                var actualisation = setTimeout(compte, 1000);
            }
            compte();
        }
        chrono();
    </script>
{% endblock %}